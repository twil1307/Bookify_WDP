{"version":3,"sources":["webpack:///node.min.js","webpack:///webpack/bootstrap f0e0689c411d86b9f52d","webpack:///./src/node.js","webpack:///./src/attach.js","webpack:///external \"whatwg-fetch\""],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","attach","this","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","interceptor","fetch","_len","arguments","args","_key","reversedInterceptors","interceptors","reduce","array","concat","promise","Promise","resolve","forEach","_ref","request","requestError","then","Request","response","catch","error","reject","_ref2","responseError","env","err","Error","_len2","_key2","register","push","index","indexOf","splice","clear","require"],"mappings":"AAAAA,OAAOC,QACE,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAH,OAGA,IAAAD,GAAAK,EAAAD,IACAH,WACAK,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAR,EAAAC,QAAAD,IAAAC,QAAAE,GAGAH,EAAAO,QAAA,EAGAP,EAAAC,QAvBA,GAAAI,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDOM,SAAUH,EAAQC,EAASE,IAEJ,SAASS,GAAS,YE/C/C,IAAMC,GAASV,EAAQ,EAEvBH,GAAOC,QAAUY,EAAOD,KFkDMJ,KAAKP,EAAU,WAAa,MAAOa,WAI3D,SAAUd,EAAQC,EAASE,GAEhC,YAEA,SAASY,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIG,GAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,EAAM,OAAOC,GAAe,MAAOH,OAAMK,KAAKN,GGrD3L,QAASO,GAAYC,GAAgB,OAAAC,GAAAC,UAAAL,OAANM,EAAMV,MAAAQ,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAND,EAAMC,EAAA,GAAAF,UAAAE,EACnC,IAAMC,GAAuBC,EAAaC,OAAO,SAACC,EAAOT,GAAR,OAAyBA,GAAaU,OAAOD,QAC1FE,EAAUC,QAAQC,QAAQT,EA4B9B,OAzBAE,GAAqBQ,QAAQ,SAAAC,GAA+B,GAA5BC,GAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,cACnCD,GAAWC,KACbN,EAAUA,EAAQO,KAAK,SAAAd,GAAA,MAAQY,kBAAWZ,KAAOa,MAKrDN,EAAUA,EAAQO,KAAK,SAAAd,GACrB,GAAMY,qCAAcG,SAAd,MAAAT,OAAAlB,EAAyBY,KAC/B,OAAOH,GAAMe,GAASE,KAAK,SAAAE,GAEzB,MADAA,GAASJ,QAAUA,EACZI,IACNC,MAAM,SAAAC,GAEP,MADAA,GAAMN,QAAUA,EACTJ,QAAQW,OAAOD,OAK1BhB,EAAqBQ,QAAQ,SAAAU,GAAiC,GAA9BJ,GAA8BI,EAA9BJ,SAAUK,EAAoBD,EAApBC,eACpCL,GAAYK,KACdd,EAAUA,EAAQO,KAAKE,EAAUK,MAI9Bd,EAhCT,GAAIJ,KAmCJ9B,GAAOC,QAAU,SAAgBgD,GAE/B,IAAKA,EAAIzB,MACP,IACErB,EAAQ,GACR,MAAO+C,GACP,KAAMC,OAAM,0DAShB,MANAF,GAAIzB,MAAS,SAAUA,GACrB,MAAO,YAAmB,OAAA4B,GAAA1B,UAAAL,OAANM,EAAMV,MAAAmC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN1B,EAAM0B,GAAA3B,UAAA2B,EACxB,OAAO9B,iBAAYC,GAAZS,OAAsBN,MAE9BsB,EAAIzB,QAGL8B,SAAU,SAAU/B,GAElB,MADAO,GAAayB,KAAKhC,GACX,WACL,GAAMiC,GAAQ1B,EAAa2B,QAAQlC,EAC/BiC,IAAS,GACX1B,EAAa4B,OAAOF,EAAO,KAIjCG,MAAO,WACL7B,SHuFA,SAAU9B,EAAQC,GIzJxBD,EAAAC,QAAA2D,QAAA","file":"node.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar attach = __webpack_require__(1);\n\t\n\tmodule.exports = attach(global);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/*\n\t* Configuration for React-Native's package system\n\t* @providesModule whatwg-fetch\n\t*/\n\t\n\tvar interceptors = [];\n\t\n\tfunction interceptor(fetch) {\n\t  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    args[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  var reversedInterceptors = interceptors.reduce(function (array, interceptor) {\n\t    return [interceptor].concat(array);\n\t  }, []);\n\t  var promise = Promise.resolve(args);\n\t\n\t  // Register request interceptors\n\t  reversedInterceptors.forEach(function (_ref) {\n\t    var request = _ref.request,\n\t        requestError = _ref.requestError;\n\t\n\t    if (request || requestError) {\n\t      promise = promise.then(function (args) {\n\t        return request.apply(undefined, _toConsumableArray(args));\n\t      }, requestError);\n\t    }\n\t  });\n\t\n\t  // Register fetch call\n\t  promise = promise.then(function (args) {\n\t    var request = new (Function.prototype.bind.apply(Request, [null].concat(_toConsumableArray(args))))();\n\t    return fetch(request).then(function (response) {\n\t      response.request = request;\n\t      return response;\n\t    }).catch(function (error) {\n\t      error.request = request;\n\t      return Promise.reject(error);\n\t    });\n\t  });\n\t\n\t  // Register response interceptors\n\t  reversedInterceptors.forEach(function (_ref2) {\n\t    var response = _ref2.response,\n\t        responseError = _ref2.responseError;\n\t\n\t    if (response || responseError) {\n\t      promise = promise.then(response, responseError);\n\t    }\n\t  });\n\t\n\t  return promise;\n\t}\n\t\n\tmodule.exports = function attach(env) {\n\t  // Make sure fetch is available in the given environment\n\t  if (!env.fetch) {\n\t    try {\n\t      __webpack_require__(2);\n\t    } catch (err) {\n\t      throw Error('No fetch available. Unable to register fetch-intercept');\n\t    }\n\t  }\n\t  env.fetch = function (fetch) {\n\t    return function () {\n\t      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        args[_key2] = arguments[_key2];\n\t      }\n\t\n\t      return interceptor.apply(undefined, [fetch].concat(args));\n\t    };\n\t  }(env.fetch);\n\t\n\t  return {\n\t    register: function register(interceptor) {\n\t      interceptors.push(interceptor);\n\t      return function () {\n\t        var index = interceptors.indexOf(interceptor);\n\t        if (index >= 0) {\n\t          interceptors.splice(index, 1);\n\t        }\n\t      };\n\t    },\n\t    clear: function clear() {\n\t      interceptors = [];\n\t    }\n\t  };\n\t};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"whatwg-fetch\");\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// node.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f0e0689c411d86b9f52d","const attach = require('./attach');\n\nmodule.exports = attach(global);\n\n\n\n// WEBPACK FOOTER //\n// ./src/node.js","/*\n* Configuration for React-Native's package system\n* @providesModule whatwg-fetch\n*/\n\nlet interceptors = [];\n\nfunction interceptor(fetch, ...args) {\n  const reversedInterceptors = interceptors.reduce((array, interceptor) => [interceptor].concat(array), []);\n  let promise = Promise.resolve(args);\n\n  // Register request interceptors\n  reversedInterceptors.forEach(({ request, requestError }) => {\n    if (request || requestError) {\n      promise = promise.then(args => request(...args), requestError);\n    }\n  });\n\n  // Register fetch call\n  promise = promise.then(args => {\n    const request = new Request(...args);\n    return fetch(request).then(response => {\n      response.request = request;\n      return response;\n    }).catch(error => {\n      error.request = request;\n      return Promise.reject(error);\n    });\n  });\n\n  // Register response interceptors\n  reversedInterceptors.forEach(({ response, responseError }) => {\n    if (response || responseError) {\n      promise = promise.then(response, responseError);\n    }\n  });\n\n  return promise;\n}\n\nmodule.exports = function attach(env) {\n  // Make sure fetch is available in the given environment\n  if (!env.fetch) {\n    try {\n      require('whatwg-fetch');\n    } catch (err) {\n      throw Error('No fetch available. Unable to register fetch-intercept');\n    }\n  }\n  env.fetch = (function (fetch) {\n    return function (...args) {\n      return interceptor(fetch, ...args);\n    };\n  })(env.fetch);\n\n  return {\n    register: function (interceptor) {\n      interceptors.push(interceptor);\n      return () => {\n        const index = interceptors.indexOf(interceptor);\n        if (index >= 0) {\n          interceptors.splice(index, 1);\n        }\n      };\n    },\n    clear: function () {\n      interceptors = [];\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/attach.js","module.exports = require(\"whatwg-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"whatwg-fetch\"\n// module id = 2\n// module chunks = 0 1"],"sourceRoot":""}